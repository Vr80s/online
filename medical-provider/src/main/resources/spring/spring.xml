<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:config.properties"/>
    <!-- Service包(自动注入) -->
    <context:component-scan base-package="com.xczhihui.medical.*.service"/>
    <import resource="classpath:spring/spring-mybatis.xml"/>

    <bean id="commonThreadPoolTaskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2"></property>
    </bean>
    <bean id="cacheService" class="com.xczhihui.common.support.service.impl.RedisCacheService">
        <constructor-arg name="host" value="${redis.host}"/>
        <constructor-arg name="port" value="${redis.port}"/>
        <constructor-arg name="maxIdle" value="${reids.maxIdle}"/>
        <constructor-arg name="maxTotal" value="${reids.maxTotal}"/>
        <constructor-arg name="timeout" value="${reids.timeout}"/>
    </bean>
    <!-- aop -->
    <bean id="lockService" class="com.xczhihui.common.support.lock.LockService"></bean>
    <!-- 启动对@AspectJ注解的支持  -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- dubbo -->
    <dubbo:application name="${dubbo.app.name}"/>
    <dubbo:registry protocol="zookeeper" address="${dubbo.zookepper.url}"/>
    <dubbo:protocol name="dubbo" host="${dubbo.protocol.host}" port="${dubbo.protocol.port}"/>

    <dubbo:service interface="com.xczhihui.medical.hospital.service.IMedicalHospitalBusinessService"
                   ref="medicalHospitalBusinessServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorBusinessService"
                   ref="medicalDoctorBusinessServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <dubbo:service interface="com.xczhihui.medical.hospital.service.IMedicalHospitalRecruitBusinessService"
                   ref="medicalHospitalRecruitBusinessServiceImpl" timeout="${dubbo.provider.timeout}"/>

    <!--医师入驻-->
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorApplyService"
                   ref="medicalDoctorApplyServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!--科室-->
    <dubbo:service interface="com.xczhihui.medical.department.service.IMedicalDepartmentService"
                   ref="medicalDepartmentServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!--医馆入驻-->
    <dubbo:service interface="com.xczhihui.medical.hospital.service.IMedicalHospitalApplyService"
                   ref="medicalHospitalApplyServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!--主播课程-->
    <dubbo:service interface="com.xczhihui.medical.anchor.service.ICourseApplyService" ref="courseApplyServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>
    <!--主播资产相关-->
    <dubbo:service interface="com.xczhihui.medical.anchor.service.IAssetService" ref="assetServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>

    <!--医师医馆公共服务-->
    <dubbo:service interface="com.xczhihui.medical.common.service.ICommonService" ref="commonServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>
    <!--添加银行卡-->
    <dubbo:service interface="com.xczhihui.medical.anchor.service.IUserBankService" ref="userBankServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>

    <!--医馆科室-->
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorDepartmentService"
                   ref="medicalDoctorDepartmentServiceImpl" timeout="${dubbo.provider.timeout}"/>

    <!--医馆认证信息-->
    <dubbo:service interface="com.xczhihui.medical.hospital.service.IMedicalHospitalAuthenticationService"
                   ref="medicalHospitalAuthenticationServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!--医师认证信息-->
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorAuthenticationInformationService"
                   ref="medicalDoctorAuthenticationInformationServiceImpl" timeout="${dubbo.provider.timeout}"/>

    <!--主播-->
    <dubbo:service interface="com.xczhihui.medical.anchor.service.IAnchorInfoService" ref="anchorInfoServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>

    <!--主播控制台：订单-->
    <dubbo:service interface="com.xczhihui.medical.anchor.service.IGiftOrderService" ref="giftOrderServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>
    <dubbo:service interface="com.xczhihui.medical.anchor.service.ICourseOrderService" ref="courseOrderServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>

    <!--头条相关-->
    <dubbo:service interface="com.xczhihui.medical.headline.service.IOeBxsArticleService" ref="oeBxsArticleServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>

    <!-- bbs -->
    <dubbo:service interface="com.xczhihui.medical.bbs.service.IPostService" ref="postServiceImpl"
                   timeout="${dubbo.provider.timeout}"/>

    <!-- 医馆公告 -->
    <dubbo:service interface="com.xczhihui.medical.hospital.service.IMedicalHospitalAnnouncementService"
                   ref="medicalHospitalAnnouncementServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!-- 医师著作 -->
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorWritingService"
                   ref="medicalDoctorWritingServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!-- 医师文章 -->
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorArticleService"
                   ref="medicalDoctorArticleServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!-- 师承模块 -->
    <dubbo:service interface="com.xczhihui.medical.enrol.service.EnrolService"
                   ref="enrolServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!-- 医师模块 -->
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorAccountService"
                   ref="medicalDoctorAccountServiceImpl" timeout="${dubbo.provider.timeout}"/>
    <!-- 医师动态模块 -->
    <dubbo:service interface="com.xczhihui.medical.doctor.service.IMedicalDoctorPostsService"
                   ref="medicalDoctorPostsServiceImpl" timeout="${dubbo.provider.timeout}"/>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"></bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="usePool" value="true"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="redisShardLockUtils" class="com.xczhihui.utils.RedisShardLockUtils"></bean>


    <!--RedissonUtil配置-->
    <bean id="redissonUtil" class="com.xczhihui.common.support.lock.RedissonUtil">
        <property name="redisHost" value="${redis.host}"></property>
        <property name="redisPort" value="${redis.port}"></property>
    </bean>

    <bean id="onlineConfig" class="com.xczhihui.common.support.config.OnlineConfig"></bean>
    <bean id="CCUtils" class="com.xczhihui.common.support.cc.util.CCUtils"></bean>

</beans>