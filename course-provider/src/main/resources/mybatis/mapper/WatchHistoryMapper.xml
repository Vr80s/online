<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xczhihui.course.mapper.WatchHistoryMapper">

    <select id="selectWatchHistory" resultType="com.xczhihui.course.vo.WatchHistoryVO">
		SELECT
		  owh.course_id AS id,
		  owh.course_id AS courseId,
		  owh.lecturer_id AS lecturerId,
		  owh.collectionId AS collectionId,
		  IF(
			owh.collectionId IS NOT NULL AND owh.collectionId > 0,
			(SELECT grade_name FROM oe_course WHERE id = owh.collectionId),
			NULL
		  ) AS collectionName,
		  IF(
			owh.collectionId IS NOT NULL AND owh.collectionId > 0,
			1,
			oc.collection
		  ) AS collection,
		  oc.grade_name AS gradeName,
		  IF(
			owh.collectionId IS NOT NULL AND owh.collectionId > 0,
			(SELECT oc.lecturer FROM oe_course oc WHERE oc.id = owh.collectionId),
			oc.lecturer
		  ) AS lecturerName,
		  owh.create_time AS watchTime,
		  IF(
			oc.type = 3,
			4,
			IF(oc.type = 1,3,IF(oc.multimedia_type = 1, 1, 2)
			)
		  ) AS TYPE,
		  oc.is_free AS watchState,
		  oc.live_source_type AS liveSourceType,
		  oc.user_lecturer_id AS userId,
		  oc.direct_id AS directId,
		  oc.smallimg_path AS smallimgPath,
		  oc.current_price AS currentPrice,
		  oc.is_free AS isFree
		FROM
		  oe_watch_history1 owh
		  INNER JOIN oe_course oc
			ON owh.course_id = oc.id or owh.collectionId = oc.id
		  INNER JOIN course_anchor ou
			ON owh.lecturer_id = ou.user_id
		  INNER JOIN apply_r_grade_course argc
		    ON oc.`id`=argc.`course_id` 
		  AND argc.`user_id`=owh.user_id AND argc.`validity`>NOW()
		WHERE owh.user_id =#{userId}
		ORDER BY owh.create_time DESC
	</select>

    <!-- 	@Param("userId") Integer type, @Param("courseId") -->
    <select id="findWatchHistoryByUserIdAndCourseId" resultType="com.xczhihui.course.model.WatchHistory">
		SELECT
		  *
		FROM
		  oe_watch_history1 owh where owh.user_id = #{userId}
		  and  owh.course_id = #{courseId}  and owh.collectionId = 0
	</select>


    <select id="findWatchHistoryByUserIdAndCollectionId" resultType="com.xczhihui.course.model.WatchHistory">
		SELECT
		  *
		FROM
		  oe_watch_history1 owh where owh.user_id = #{userId}
		  
		  and  owh.collectionId = #{collectionId}
	</select>


    <select id="findWatchHistoryByUserId" resultType="com.xczhihui.course.model.WatchHistory">
		SELECT
		  *
		FROM
		  oe_watch_history1 owh where owh.user_id = #{userId}  limit 0,5
	</select>

    <delete id="deleteBatch">
        delete from oe_watch_history1
        where id in
        <foreach collection="list" item="model" open="(" separator="," close=")">
            #{model.id}
        </foreach>
    </delete>

    <delete id="deleteWatchHistoryByUserId">
        delete  from  oe_watch_history1  where user_id = #{userId}
	</delete>

    <insert id="insertApplyRGradeCourse">
	INSERT IGNORE INTO apply_r_grade_course(
		id, course_id,is_payment,cost,  user_id, create_time
	) VALUES
		( #{id}, #{courseId},  0,  0,   #{userId}, now())
	</insert>
    <insert id="insertWatchHistory">
		INSERT INTO `oe_watch_history1` (
		  user_id, lecturer_id, course_id, collectionId
		)
		VALUES
		  (#{userId},#{userLecturerId},#{courseId},#{collectionId})
		   ON DUPLICATE KEY UPDATE create_time = NOW();
	</insert>


</mapper>