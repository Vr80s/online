<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xczhihui.course.mapper.MobileBannerMapper">
	<resultMap type="com.xczhihui.course.model.MobileBanner" id="MobileBannerBaseResult">
		<id column="id" property="id" />
		<id column="name" property="name" />
		<id column="url" property="url" />
		<id column="click_sum" property="clickSum" />
		<id column="create_person" property="createPerson" />
		<id column="create_time" property="createTime" />
		<id column="status" property="status" />
		<id column="seq" property="seq" />
		<id column="img_path" property="imgPath" />
		<id column="link_type" property="linkType" />
		<id column="link_condition" property="linkCondition" />
		<id column="banner_type" property="bannerType" />
	</resultMap>
	
	<select id="selectMobileBannerPage" resultMap="MobileBannerBaseResult">
		SELECT
		  ocmb.*
		FROM
		  oe_course_mobile_banner ocmb
		WHERE ocmb.status = 1
		<if test="type != null and type != ''">
			and ocmb.banner_type = #{type}
		</if>
		ORDER BY ocmb.seq desc

	</select>
	<update id="addClickNum">
		UPDATE
		oe_course_mobile_banner
		SET click_sum = click_sum+1
		WHERE id = #{id}
	</update>
	
	
	<sql id="commonCondition">
	   from  oe_course oc 
		inner join course_anchor as ou on oc.user_lecturer_id = ou.user_id
		where  ou.status = 1
		and ou.deleted =0
		and oc.is_delete=0 
		and oc.status=1 
	</sql>
	
	<sql id="selectRecommenCourse">
		oc.id,
		oc.grade_name as gradeName,
		oc.current_price*10 as currentPrice,
		oc.city as city,
        oc.smallimg_path as smallImgPath,
        oc.lecturer as name,
		if(oc.type =3,4,IF(oc.type =1,3,if(oc.multimedia_type=1,1,2))) as type,
		if(oc.is_free =0,0,1) as watchState,	
		oc.collection as collection,
		if(oc.sort_update_time&lt; now(),0,oc.recommend_sort) recommendSort,
		oc.start_time as startTime,
		if(oc.live_status=1,DATE_FORMAT(oc.start_time,'%H:%i'),
		if(oc.live_status=2,if(oc.start_time &lt;= DATE_ADD(DATE_ADD(str_to_date(DATE_FORMAT(NOW(),'%Y-%m-%d'),
		 	'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 SECOND),
		 	DATE_FORMAT(oc.start_time,'%H:%i'),DATE_FORMAT(oc.start_time,'%m.%d')),
		 	DATE_FORMAT(oc.start_time,'%m.%d') )) as startDateStr,
		 	
		if(oc.live_status = 2,if((DATE_SUB(now(),INTERVAL 30 MINUTE) &lt; oc.start_time and now() > oc.start_time ) or 
                             (DATE_ADD(now(),INTERVAL 10 MINUTE)>=oc.start_time and now() &lt; oc.start_time ),4,
                  if(DATE_ADD(now(),INTERVAL 2 HOUR)>=oc.start_time and now() &lt; oc.start_time,5,oc.live_status)),oc.live_status) as lineState, 	
		 	
		(SELECT IFNULL((SELECT  COUNT(*) FROM apply_r_grade_course WHERE course_id = oc.id),0)
		 + IFNULL(oc.default_student_count, 0)) as  learndCount,
	</sql>
	
	<select id="recommendCourseList" resultType="com.xczhihui.course.vo.CourseLecturVo">
		( 
		  select 
		  <include refid="selectRecommenCourse"/>
		    '精品课程' as note
		  <include refid="commonCondition"/>
			order by recommendSort desc,oc.release_time desc  limit 0,#{pageSizeUp} 
        )
        union all
        ( select 
		  <include refid="selectRecommenCourse"/>
		    '最新课程' as note
		 <include refid="commonCondition"/> 
			 order by  oc.release_time desc  limit 0,#{pageSizeUp} 
        )
		<if test="cateGoryList !=null ">  
			union all
			<foreach item="cateGory" collection="cateGoryList" index="index"  separator="union all">  
	             ( 
	               select 
					 <include refid="selectRecommenCourse"/>
				       om.name as note
 					    from  oe_course  oc 
						 inner join course_anchor as ou  on oc.user_lecturer_id = ou.user_id
						 inner join oe_menu as  om  on om.id = oc.menu_id
						 where  ou.status = 1  and ou.deleted =0
						 and oc.is_delete=0 
						 and oc.status=1 
						 and om.id  = #{cateGory.id}
						 order by recommendSort desc,oc.release_time desc limit 0,#{pageSizeDown}
	    		 )
	        </foreach>  
     	 </if>     
	</select>
	
	<sql id="selectRealCourse">
	    oc.id,
	    oc.grade_name as gradeName,
	    oc.current_price*10 as currentPrice,
	    4 as type,
		oc.smallimg_path as smallImgPath,
		oc.lecturer as name,
		oc.address as address,
        oc.city as city,
        DATE_FORMAT(oc.start_time,'%m.%d') as startDateStr,
		IFNULL((SELECT COUNT(*) FROM apply_r_grade_course WHERE course_id = oc.id),0) + IFNULL(oc.default_student_count, 0) learndCount,
		if(date_sub(date_format(oc.start_time,'%Y%m%d'),INTERVAL 1 DAY)>=date_format(now(),'%Y-%m-%d'),1,0) as cutoff,
		oc.collection as collection,
		oc.is_free as watchState,
		if(oc.sort_update_time &lt; now(),0,oc.recommend_sort) recommendSort,
		oc.start_time as startTime,
	</sql>
	
	
	<select id="realCourseList" resultType="com.xczhihui.course.vo.CourseLecturVo">
		( 
		  select 
		  <include refid="selectRealCourse"/>
		    '全国课程' as note
			from oe_course oc 
			WHERE oc.is_delete=0 and oc.status=1 and oc.type = 3
		    ORDER BY recommendSort desc,oc.start_time DESC LIMIT 0,#{pageSizeUp}
        )
		<if test="cityList !=null ">  
			union all
			<foreach item="city" collection="cityList" index="index"  separator="union all">  
	             ( 
	               select 
					 <include refid="selectRealCourse"/>
				    oc.city as note
					from  oe_course oc 
					WHERE oc.is_delete=0 and oc.status=1 and oc.type = 3 and oc.city = #{city.cityName}
					ORDER BY recommendSort desc,oc.start_time DESC LIMIT 0,#{pageSizeDown}
	    		 )
	        </foreach>  
     	 </if>     
	</select>
	
	
	
	<sql id="selectLiveCourse">
	     oc.id,
	     oc.direct_Id as directId,
	     oc.course_length as courseLength,
	     oc.grade_name as gradeName,
	     oc.lecturer as name,
		 oc.smallimg_path as smallImgPath,
		 DATE_FORMAT(oc.start_time,'%H:%i') as startDateStr,oc.end_time as endTime,
		 oc.current_price*10 as currentPrice,
		 if(oc.is_free =0,0,1) as watchState,
		 if(oc.type =3,4,IF(oc.type = 1,3,if(oc.multimedia_type=1,1,2))) as type,
		 if(oc.sort_update_time &lt; now(),0,oc.recommend_sort) recommendSort,
		 oc.start_time as startTime,
		 oc.collection as collection,
		 
		 (SELECT IFNULL((SELECT  COUNT(*) FROM apply_r_grade_course WHERE course_id = oc.id),0)
		 + IFNULL(oc.default_student_count, 0)) as  learndCount,
		 
	     if(oc.live_status = 2,if((DATE_SUB(now(),INTERVAL 30 MINUTE) &lt; oc.start_time and now() > oc.start_time ) or 
                             (DATE_ADD(now(),INTERVAL 10 MINUTE)>=oc.start_time and now() &lt; oc.start_time ),4,
                  if(DATE_ADD(now(),INTERVAL 2 HOUR)>=oc.start_time and now() &lt; oc.start_time,5,oc.live_status)),oc.live_status) as lineState, 	
	</sql>
	
	
	<select id="liveCourseList" resultType="com.xczhihui.course.vo.CourseLecturVo">
		( 
		  select 
		    <include refid="selectLiveCourse"/>
		    '正在直播' as note
		  <include refid="commonCondition"/>
			and	oc.type=1 and oc.live_status = 1 and oc.start_time >= DATE_SUB(now(),INTERVAL 1 DAY)
			order by  recommendSort DESC,oc.start_time DESC LIMIT 0,#{pageSizeUp}
        )
        union all
        ( 
		  select 
		    <include refid="selectLiveCourse"/>
		    '即将直播' as note
		  <include refid="commonCondition"/>
		   and oc.type=1 and oc.live_status = 2 and ( ( oc.start_time &lt;= DATE_ADD(now(),INTERVAL 1 DAY) and oc.start_time > now() ) or ( DATE_SUB(now(),INTERVAL 30 MINUTE) &lt; oc.start_time and now() > oc.start_time ))   
		   order by  recommendSort DESC,oc.start_time asc LIMIT 0,#{pageSizeDown}
        )
        union all
        ( 
		  select 
		    <include refid="selectLiveCourse"/>
		    '直播课程' as note
			<include refid="commonCondition"/>
			and oc.type=1 and oc.live_status = 2 and oc.start_time >= DATE_ADD(now(),INTERVAL 1 DAY)
			order by  recommendSort DESC,oc.start_time asc LIMIT 0,#{pageSizeDown}
        )
        union all
       ( 
		  select 
		    <include refid="selectLiveCourse"/>
		    '精彩直播回放' as note
			<include refid="commonCondition"/> 
			and oc.type=1 and oc.live_status = 3
		    order by  recommendSort DESC,oc.start_time desc LIMIT 0,#{pageSizeDown}
        ) 
        
    </select>    
	
	
	
	
	
</mapper>